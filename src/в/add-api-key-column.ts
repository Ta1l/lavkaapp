// scripts/add-api-key-column.ts
import { pool } from '../src/lib/db';

async function migrate() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ–ª–æ–Ω–∫–∞
    const checkColumn = await pool.query(`
      SELECT column_name 
      FROM information_schema.columns 
      WHERE table_name = 'users' AND column_name = 'api_key'
    `);

    if (checkColumn.rows.length === 0) {
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É
      await pool.query('ALTER TABLE users ADD COLUMN api_key VARCHAR(255)');
      console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ api_key —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞');
      
      // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å
      await pool.query('CREATE INDEX IF NOT EXISTS idx_users_api_key ON users(api_key)');
      console.log('‚úÖ –ò–Ω–¥–µ–∫—Å –¥–ª—è api_key —Å–æ–∑–¥–∞–Ω');
    } else {
      console.log('‚ÑπÔ∏è –ö–æ–ª–æ–Ω–∫–∞ api_key —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
    const structure = await pool.query(`
      SELECT column_name, data_type, is_nullable
      FROM information_schema.columns 
      WHERE table_name = 'users'
      ORDER BY ordinal_position
    `);
    
    console.log('\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã users:');
    structure.rows.forEach(col => {
      console.log(`  - ${col.column_name}: ${col.data_type} ${col.is_nullable === 'NO' ? 'NOT NULL' : ''}`);
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
  } finally {
    await pool.end();
  }
}

migrate();